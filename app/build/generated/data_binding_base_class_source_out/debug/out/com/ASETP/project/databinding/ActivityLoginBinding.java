// Generated by view binder compiler. Do not edit!
package com.ASETP.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.ASETP.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final TextView forgotPassword;

  @NonNull
  public final TextView goToRegister;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText inputEmail;

  @NonNull
  public final EditText inputPassword;

  @NonNull
  public final TextView topText;

  @NonNull
  public final View topView;

  @NonNull
  public final View view2;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLogin,
      @NonNull TextView forgotPassword, @NonNull TextView goToRegister,
      @NonNull ImageView imageView, @NonNull EditText inputEmail, @NonNull EditText inputPassword,
      @NonNull TextView topText, @NonNull View topView, @NonNull View view2) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.forgotPassword = forgotPassword;
    this.goToRegister = goToRegister;
    this.imageView = imageView;
    this.inputEmail = inputEmail;
    this.inputPassword = inputPassword;
    this.topText = topText;
    this.topView = topView;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = rootView.findViewById(id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.forgotPassword;
      TextView forgotPassword = rootView.findViewById(id);
      if (forgotPassword == null) {
        break missingId;
      }

      id = R.id.goToRegister;
      TextView goToRegister = rootView.findViewById(id);
      if (goToRegister == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.inputEmail;
      EditText inputEmail = rootView.findViewById(id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.inputPassword;
      EditText inputPassword = rootView.findViewById(id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.topText;
      TextView topText = rootView.findViewById(id);
      if (topText == null) {
        break missingId;
      }

      id = R.id.topView;
      View topView = rootView.findViewById(id);
      if (topView == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = rootView.findViewById(id);
      if (view2 == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnLogin, forgotPassword,
          goToRegister, imageView, inputEmail, inputPassword, topText, topView, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
